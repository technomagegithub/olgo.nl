<?php
namespace AppBundle\Command;

use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Goutte\Client;

class IndexerCommand extends ContainerAwareCommand
{
    protected function configure()
    {
        $this
            ->setName('demo:greet')
            ->setDescription('Greet someone')
            ->addArgument(
                'name',
                InputArgument::OPTIONAL,
                'Who do you want to greet?'
            )
            ->addOption(
                'yell',
                null,
                InputOption::VALUE_NONE,
                'If set, the task will yell in uppercase letters'
            )
        ;
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $name = $input->getArgument('name');
        if ($name) {
            $text = 'Hello '.$name;
        } else {
            $text = 'Hello';
        }

        if ($input->getOption('yell')) {
            $text = strtoupper($text);
        }

    //    $output->writeln($text);


        if(!$file = fopen("prijzen-".date('Y-m-d').".csv", "w")) {
           $output->writeln("can not open file");
           die;
        }

        $client = new Client();
        $client->getClient()->setDefaultOption('config/curl/'.CURLOPT_TIMEOUT, 60);
        $products = $this->getProducts();
        $counter = 1;
        foreach($products as $product) {

 	  $crawler = $client->request('GET', 'http://brickwat.ch/'.$product);

          $status_code = $client->getResponse()->getStatus();
          if($status_code==200){
             $result = $crawler->filter('#prices')->filter('tr.row-collapse');
             $output->writeln("Sites found for product ".$product.": ".$result->count());
             $prices[$product] = array();
             if ($result->count()) {
                for($i=0;$i<$result->count();$i++) {
                   $price   = "";
                   $company = "";
                   $values   = $result->eq($i)->filter('td');
  
                   // Get company Name
                   if($values->eq(0)->filter('a img')->count()) {
                      $company = $values->eq(0)->filter('a img')->attr('title');
                      $price = $values->eq(2)->filter('a')->text();
                   } else {
                      $company = $values->eq(0)->text();
                      $price = $values->eq(2)->text();
                   } 
                   $prices[$product][$company] = $price;
                   $companys[$company] = $company;
                }
                 
             }
          }
          $counter++;
          usleep(500000);
          //if ($counter > 2)
          //   break;
       }
       $this->writeResults($output, $prices, $companys, $file);
       fclose($file);
    }
    
    protected function writeResults($output, $prices, $companys, $file) {
           

        $break = ";";
        $line = "product";
        foreach ($companys as $company) {
          $line = $line.$break.$company;
        }

        fwrite($file, $line."\n"); 
	        
        foreach($prices as $product => $price) {
           $line = $product;
           foreach ($companys as $company) {
             if (isset($price[$company]))
                 $line = $line . $break . $price[$company];
             else
                 $line = $line . $break;
 
           }
           fwrite($file, $line."\n"); 
        }
    }
 
    protected function getProducts() {
       return explode("\n","2735
3775
4962
5609
8881
8882
8883
8884
8885
8886
9841
9842
9843
9844
9845
9846
10188
852095
853106
8015
6176
6176
7942
10681
8086
44012
2174
3847
8083
79101
8084
3852
7929
21050
21013
21011
21019
21023
21018
21017
21022
21024
21003
21006
21015
21020
21014
70778
70779
70782
70780
70786
70788
70784
70790
70795
70789
70785
70781
70783
70792
70794
70793
70791
70787
5529
10682
10660
10659
9479
9484
8679
70401
70404
10223
10193
70402
60085
60036
60034
60062
60033
60032
60035
60065
60060
60041
60068
4209
60088
60004
60002
60074
60057
60022
7939
60020
60063
60099
60086
60012
60013
60014
60015
60096
60090
60073
60091
60092
60093
60095
4433
75913
7499
850618
60001
60003
60010
60000
60017
8867
4440
60043
60075
60098
60009
4429
60049
60067
60046
60042
60051
60071
60080
853378
40110
3221
4201
60044
60069
60066
60055
60008
4205
7938
4436
60081
850617
60048
7279
60045
4437
60006
60047
60053
60084
7895
7280
4206
3677
60072
60076
60083
60007
60077
60097
60082
60011
60058
7281
60016
4204
60026
7937
60079
66493
60050
60078
60052
60070
4644
7747
10693
10695
10694
10696
10692
10701
10700
10698
10697
10699
71008
71004
71007
8833
5891
31033
31011
31037
31025
31026
31027
31039
31010
31019
31029
5767
10246
31015
10244
10248
10247
10197
10211
31018
7347
31006
10233
40154
5770
31024
10242
31001
31000
6910
10232
10243
10218
31014
31031
31032
31003
31013
31030
31034
10245
31009
31021
10226
31036
31035
7291
31017
31002
10234
71006
71016
10214
10249
31022
31020
31038
10220
31028
10216
10235
31023
76034
10937
76011
76013
76010
76012
76027
76040
76028
76026
76025
76035
76002
76003
76009
76001
76023
71213
71214
71210
71212
71220
71218
71215
71219
71216
71221
71209
71217
71201
71203
71202
71170
71171
71174
71173
71172
71205
71206
5886
41050
41052
41063
41053
41055
41062
41061
41051
41054
41060
10559
5817
10590
10570
10572
10571
10527
6158
10582
10516
10521
10623
10545
10599
10539
10525
10520
10577
10522
10592
10591
10593
6759
10587
10602
6154
10503
10550
10600
10579
6785
10573
10618
10575
10552
10556
10574
10566
6784
10565
10601
10580
10596
10606
10605
10581
5507
10509
10524
10538
6169
10583
10584
4627
6171
10558
10557
2304
2304
6758
10586
10604
10514
10512
10568
10622
5813
10508
5683
10597
10531
10507
10585
4631
10603
10504
10518
10617
6138
5931
10616
10532
10546
10615
6136
10513
10500
6173
10560
10526
10553
6156
4623
10505
5497
5679
10589
6133
6143
10510
10528
6134
10511
10542
6152
10595
10594
10608
10607
10543
10544
10567
10554
10561
10569
10506
10529
10502
10576
45514
9694
45501
9693
41071
41077
41074
41076
41075
41073
41072
41078
41009
41031
41046
40114
41022
41018
41085
41015
41006
41095
41002
41028
41013
41098
41023
41032
41016
41040
41102
40080
41008
41109
41101
41093
41005
41057
41035
41097
41056
41007
41100
41099
41108
41094
41058
41020
41089
850967
41038
41059
41036
41033
41087
41048
41044
41027
41001
41091
40112
41010
3315
41030
41003
41090
41045
40156
41049
41024
41043
41021
41104
41107
41103
41105
41106
41088
41025
41004
41047
41017
3183
41029
3930
41092
41011
41037
41034
41026
41039
41042
41019
41041
41086
41000
3860
3920
5003566
5003569
5003570
5003575
5003576
851353
850896
5004363
853471
850506
853451
853474
5001159
851343
851341
853450
853440
853444
850963
851394
850807
850638
851369
853472
850636
852552
851393
852771
851351
853447
853409
850640
5002211
850637
853470
5002912
851395
850705
850909
850666
853464
853463
851352
851344
853465
851400
853469
853449
5001310
44025
44015
44020
44016
44029
44021
44028
44024
21301
21109
21108
21102
21302
21103
21303
10672
10685
10667
10686
10671
10679
10675
10674
10668
10673
10676
10687
10665
10677
10684
10669
10680
10683
75916
75919
75915
75920
75917
75918
70136
70137
70225
70103
70128
70113
70203
70207
70201
70211
70209
70208
70205
70210
70102
70204
70135
70231
70011
70003
70142
850913
70156
70150
70221
70146
70151
70230
70223
70155
70227
70144
70134
70129
850777
850779
70123
70229
70226
70145
70012
70100
70131
70108
70232
70149
70132
70147
70143
70107
70114
70139
70130
70133
70140
70220
70101
70224
70222
70115
70141
70228
70138
70109
70009
76038
76030
76032
76017
76018
76036
76015
76008
76029
76006
76007
76020
76039
6869
76037
76042
76016
76005
6873
76019
76031
76041
76021
76022
2852724
10285
45506
45505
45508
45509
45500
45502
45503
45507
45504
31313
45517
21116
21120
21122
21121
21113
21119
21107
21117
21114
21115
21118
71010
71009
40118
850702
21201
40155
41535
41540
41531
41536
41537
41538
41539
41528
41529
41527
41541
41542
41544
41543
41534
41501
9466
9462
9461
9464
9463
70736
70741
70740
70739
70743
70744
70742
70745
70728
851342
70733
70747
70732
70746
70734
70756
70754
70749
70504
70731
70755
70752
70730
70738
70753
70725
70750
70724
70735
2506
70751
70748
70737
70501
70412
70413
70411
70409
40158
70410
4191
88000
8871
8879
88003
8870
8869
8878
88004
88002
8887
75903
75900
75904
75901
75902
850950
850949
40010
40086
850791
850850
850939
40122
40032
2000431
2000430
2000414
2000409
70705
70706
70709
70708
70703
70704
70702
75908
75899
75911
75909
75912
75910
75003
75029
75080
75087
9494
75072
8088
75106
75043
75054
75075
8129
75083
75002
75050
75012
75086
75108
75028
75015
75046
7961
75111
75093
75034
9496
75042
75044
75017
9488
8096
7956
10236
75090
75100
75101
75103
75091
8085
75112
8095
75040
9491
75089
9499
75085
75024
75016
75077
7879
75094
75055
75078
9516
75020
75107
75025
75038
75051
75018
75035
75104
75110
8092
9515
75022
75030
75105
7965
75052
75058
9674
75092
75109
9526
75102
9525
10225
75005
10240
75045
7964
75021
75076
9497
75001
75099
9498
75059
9675
75088
75079
9500
75096
75060
75049
75074
75033
75023
75056
9509
75097
10221
75081
75053
75048
75082
8087
75095
9676
75031
9678
75013
75036
75039
75037
75041
75073
75084
75032
9677
75004
42039
9398
41999
8069
42040
42028
42025
42032
42023
42024
42029
42006
42000
42020
42031
42022
42002
9397
42043
42004
42001
42035
42009
42005
42007
8293
42038
42010
42037
42034
42011
42041
42033
42042
42008
42021
42036
42030
42027
42026
79105
79116
79118
79119
79122
79102
79120
79104
79103
79117
79121
79115
79003
79002
79016
79004
79011
79014
79000
79017
79010
79018
79015
70819
70802
70817
70816
70806
70803
70812
70818
70814
70800
70804
70809
70801
70807
70810
70813
70815
70808
70811
70805
79106
79109
79107
79111
79110
79108
9472
79008
79006
9473
79005
10237
70169
70168
70162
70167
70164
70160
70166
70163
70161
70165
70170");

    }
}
?>
